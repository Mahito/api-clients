/**
 * Platform Tags
 * SCIM V1 API implemented by Miro
 *
 * The version of the OpenAPI document: v2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
* Defines the public-level, organization-level, and team-level access for the board. The access level that a user gets depends on the highest level of access that results from considering the public-level, team-level, organization-level, and direct sharing access. For more information, see [Sharing policy](https://developers.miro.com/reference/rest-api-policy-data-model#sharing-policy).
*/
export declare class BoardSharingPolicy {
    /**
    * Defines the public-level access to the board. Possible values: `private`, `view`, `edit`, `comment`
    */
    'access'?: BoardSharingPolicy.AccessEnum;
    /**
    * Defines the user role when inviting a user via the invite to team and board link. For Enterprise users, the `inviteToAccountAndBoardLinkAccess` parameter is always set to `no_access`. Possible values: `viewer`, `commenter`, `editor`, `coowner`, `owner`, `guest`, `no_access`
    */
    'inviteToAccountAndBoardLinkAccess'?: BoardSharingPolicy.InviteToAccountAndBoardLinkAccessEnum;
    /**
    * Defines the organization-level access to the board. If the board is created for a team that does not belong to an organization, the `organizationAccess` parameter is always set to the default value. Possible values: `private`, `view`, `comment`, `edit`
    */
    'organizationAccess'?: BoardSharingPolicy.OrganizationAccessEnum;
    /**
    * Defines the team-level access to the board. Possible values: `private`, `view`, `comment`, `edit`
    */
    'teamAccess'?: BoardSharingPolicy.TeamAccessEnum;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace BoardSharingPolicy {
    enum AccessEnum {
        Private,
        View,
        Edit,
        Comment
    }
    enum InviteToAccountAndBoardLinkAccessEnum {
        Viewer,
        Commenter,
        Editor,
        Coowner,
        Owner,
        Guest,
        NoAccess
    }
    enum OrganizationAccessEnum {
        Private,
        View,
        Comment,
        Edit
    }
    enum TeamAccessEnum {
        Private,
        View,
        Comment,
        Edit
    }
}

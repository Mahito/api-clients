"use strict";
/**
 * Platform Tags
 * SCIM V1 API implemented by Miro
 *
 * The version of the OpenAPI document: v2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
exports.__esModule = true;
exports.BoardPermissionsPolicy = void 0;
/**
* Defines the permissions policies for the board. For more information, see [Permissions policy](https://developers.miro.com/reference/rest-api-policy-data-model#permissions-policy).
*/
var BoardPermissionsPolicy = /** @class */ (function () {
    function BoardPermissionsPolicy() {
        /**
        * Defines who can start or stop timer, voting, video chat, screen sharing, attention management. Others will only be able to join. To change the value for the `collaborationToolsStartAccess` parameter, contact Miro Customer Support. Possible values: `all_editors`, `board_owners_and_coowners`
        */
        this['collaborationToolsStartAccess'] = BoardPermissionsPolicy.CollaborationToolsStartAccessEnum.AllEditors;
        /**
        * Defines who can copy the board, copy objects, download images, and save the board as a template or PDF. Possible values: `anyone`, `team_members`, `team_editors`, `board_owner`
        */
        this['copyAccess'] = BoardPermissionsPolicy.CopyAccessEnum.Anyone;
        /**
        * Defines who can change access and invite users to this board. To change the value for the `sharingAccess` parameter, contact Miro Customer Support. Possible values: `team_members_with_editing_rights`, `owner_and_coowners`
        */
        this['sharingAccess'] = BoardPermissionsPolicy.SharingAccessEnum.TeamMembersWithEditingRights;
    }
    BoardPermissionsPolicy.getAttributeTypeMap = function () {
        return BoardPermissionsPolicy.attributeTypeMap;
    };
    BoardPermissionsPolicy.discriminator = undefined;
    BoardPermissionsPolicy.attributeTypeMap = [
        {
            "name": "collaborationToolsStartAccess",
            "baseName": "collaborationToolsStartAccess",
            "type": "BoardPermissionsPolicy.CollaborationToolsStartAccessEnum"
        },
        {
            "name": "copyAccess",
            "baseName": "copyAccess",
            "type": "BoardPermissionsPolicy.CopyAccessEnum"
        },
        {
            "name": "sharingAccess",
            "baseName": "sharingAccess",
            "type": "BoardPermissionsPolicy.SharingAccessEnum"
        }
    ];
    return BoardPermissionsPolicy;
}());
exports.BoardPermissionsPolicy = BoardPermissionsPolicy;
(function (BoardPermissionsPolicy) {
    var CollaborationToolsStartAccessEnum;
    (function (CollaborationToolsStartAccessEnum) {
        CollaborationToolsStartAccessEnum[CollaborationToolsStartAccessEnum["AllEditors"] = 'all_editors'] = "AllEditors";
        CollaborationToolsStartAccessEnum[CollaborationToolsStartAccessEnum["BoardOwnersAndCoowners"] = 'board_owners_and_coowners'] = "BoardOwnersAndCoowners";
    })(CollaborationToolsStartAccessEnum = BoardPermissionsPolicy.CollaborationToolsStartAccessEnum || (BoardPermissionsPolicy.CollaborationToolsStartAccessEnum = {}));
    var CopyAccessEnum;
    (function (CopyAccessEnum) {
        CopyAccessEnum[CopyAccessEnum["Anyone"] = 'anyone'] = "Anyone";
        CopyAccessEnum[CopyAccessEnum["TeamMembers"] = 'team_members'] = "TeamMembers";
        CopyAccessEnum[CopyAccessEnum["TeamEditors"] = 'team_editors'] = "TeamEditors";
        CopyAccessEnum[CopyAccessEnum["BoardOwner"] = 'board_owner'] = "BoardOwner";
    })(CopyAccessEnum = BoardPermissionsPolicy.CopyAccessEnum || (BoardPermissionsPolicy.CopyAccessEnum = {}));
    var SharingAccessEnum;
    (function (SharingAccessEnum) {
        SharingAccessEnum[SharingAccessEnum["TeamMembersWithEditingRights"] = 'team_members_with_editing_rights'] = "TeamMembersWithEditingRights";
        SharingAccessEnum[SharingAccessEnum["OwnerAndCoowners"] = 'owner_and_coowners'] = "OwnerAndCoowners";
    })(SharingAccessEnum = BoardPermissionsPolicy.SharingAccessEnum || (BoardPermissionsPolicy.SharingAccessEnum = {}));
})(BoardPermissionsPolicy = exports.BoardPermissionsPolicy || (exports.BoardPermissionsPolicy = {}));
exports.BoardPermissionsPolicy = BoardPermissionsPolicy;

"use strict";
/**
 * Platform Tags
 * SCIM V1 API implemented by Miro
 *
 * The version of the OpenAPI document: v2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
exports.__esModule = true;
exports.UserSchemaRolesInner = void 0;
var UserSchemaRolesInner = /** @class */ (function () {
    function UserSchemaRolesInner() {
    }
    UserSchemaRolesInner.getAttributeTypeMap = function () {
        return UserSchemaRolesInner.attributeTypeMap;
    };
    UserSchemaRolesInner.discriminator = undefined;
    UserSchemaRolesInner.attributeTypeMap = [
        {
            "name": "display",
            "baseName": "display",
            "type": "UserSchemaRolesInner.DisplayEnum"
        },
        {
            "name": "primary",
            "baseName": "primary",
            "type": "boolean"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string"
        },
        {
            "name": "value",
            "baseName": "value",
            "type": "UserSchemaRolesInner.ValueEnum"
        }
    ];
    return UserSchemaRolesInner;
}());
exports.UserSchemaRolesInner = UserSchemaRolesInner;
(function (UserSchemaRolesInner) {
    var DisplayEnum;
    (function (DisplayEnum) {
        DisplayEnum[DisplayEnum["Member"] = 'Member'] = "Member";
        DisplayEnum[DisplayEnum["TeamAdmin"] = 'Team Admin'] = "TeamAdmin";
    })(DisplayEnum = UserSchemaRolesInner.DisplayEnum || (UserSchemaRolesInner.DisplayEnum = {}));
    var ValueEnum;
    (function (ValueEnum) {
        ValueEnum[ValueEnum["User"] = 'ORGANIZATION_INTERNAL_USER'] = "User";
        ValueEnum[ValueEnum["Admin"] = 'ORGANIZATION_INTERNAL_ADMIN'] = "Admin";
    })(ValueEnum = UserSchemaRolesInner.ValueEnum || (UserSchemaRolesInner.ValueEnum = {}));
})(UserSchemaRolesInner = exports.UserSchemaRolesInner || (exports.UserSchemaRolesInner = {}));
exports.UserSchemaRolesInner = UserSchemaRolesInner;

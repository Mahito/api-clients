"use strict";
/**
 * Platform Tags
 * SCIM V1 API implemented by Miro
 *
 * The version of the OpenAPI document: v2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
exports.__esModule = true;
exports.TeamSharingPolicySettingsChanges = void 0;
/**
* Team sharing policy settings
*/
var TeamSharingPolicySettingsChanges = /** @class */ (function () {
    function TeamSharingPolicySettingsChanges() {
    }
    TeamSharingPolicySettingsChanges.getAttributeTypeMap = function () {
        return TeamSharingPolicySettingsChanges.attributeTypeMap;
    };
    TeamSharingPolicySettingsChanges.discriminator = undefined;
    TeamSharingPolicySettingsChanges.attributeTypeMap = [
        {
            "name": "createAssetAccessLevel",
            "baseName": "createAssetAccessLevel",
            "type": "TeamSharingPolicySettingsChanges.CreateAssetAccessLevelEnum"
        },
        {
            "name": "defaultBoardAccess",
            "baseName": "defaultBoardAccess",
            "type": "TeamSharingPolicySettingsChanges.DefaultBoardAccessEnum"
        },
        {
            "name": "defaultOrganizationAccess",
            "baseName": "defaultOrganizationAccess",
            "type": "TeamSharingPolicySettingsChanges.DefaultOrganizationAccessEnum"
        },
        {
            "name": "defaultProjectAccess",
            "baseName": "defaultProjectAccess",
            "type": "TeamSharingPolicySettingsChanges.DefaultProjectAccessEnum"
        },
        {
            "name": "moveBoardToAccount",
            "baseName": "moveBoardToAccount",
            "type": "TeamSharingPolicySettingsChanges.MoveBoardToAccountEnum"
        },
        {
            "name": "sharingOnAccount",
            "baseName": "sharingOnAccount",
            "type": "TeamSharingPolicySettingsChanges.SharingOnAccountEnum"
        },
        {
            "name": "sharingOnOrganization",
            "baseName": "sharingOnOrganization",
            "type": "TeamSharingPolicySettingsChanges.SharingOnOrganizationEnum"
        },
        {
            "name": "sharingViaPublicLink",
            "baseName": "sharingViaPublicLink",
            "type": "TeamSharingPolicySettingsChanges.SharingViaPublicLinkEnum"
        },
        {
            "name": "sharingWithExternalUsers",
            "baseName": "sharingWithExternalUsers",
            "type": "TeamSharingPolicySettingsChanges.SharingWithExternalUsersEnum"
        },
        {
            "name": "whiteListDomainsEnabled",
            "baseName": "whiteListDomainsEnabled",
            "type": "boolean"
        },
        {
            "name": "whiteListedDomains",
            "baseName": "whiteListedDomains",
            "type": "Array<string>"
        }
    ];
    return TeamSharingPolicySettingsChanges;
}());
exports.TeamSharingPolicySettingsChanges = TeamSharingPolicySettingsChanges;
(function (TeamSharingPolicySettingsChanges) {
    var CreateAssetAccessLevelEnum;
    (function (CreateAssetAccessLevelEnum) {
        CreateAssetAccessLevelEnum[CreateAssetAccessLevelEnum["CompanyAdmins"] = 'COMPANY_ADMINS'] = "CompanyAdmins";
        CreateAssetAccessLevelEnum[CreateAssetAccessLevelEnum["Admins"] = 'ADMINS'] = "Admins";
        CreateAssetAccessLevelEnum[CreateAssetAccessLevelEnum["AllMembers"] = 'ALL_MEMBERS'] = "AllMembers";
    })(CreateAssetAccessLevelEnum = TeamSharingPolicySettingsChanges.CreateAssetAccessLevelEnum || (TeamSharingPolicySettingsChanges.CreateAssetAccessLevelEnum = {}));
    var DefaultBoardAccessEnum;
    (function (DefaultBoardAccessEnum) {
        DefaultBoardAccessEnum[DefaultBoardAccessEnum["Private"] = 'private'] = "Private";
        DefaultBoardAccessEnum[DefaultBoardAccessEnum["View"] = 'view'] = "View";
        DefaultBoardAccessEnum[DefaultBoardAccessEnum["Comment"] = 'comment'] = "Comment";
        DefaultBoardAccessEnum[DefaultBoardAccessEnum["Edit"] = 'edit'] = "Edit";
    })(DefaultBoardAccessEnum = TeamSharingPolicySettingsChanges.DefaultBoardAccessEnum || (TeamSharingPolicySettingsChanges.DefaultBoardAccessEnum = {}));
    var DefaultOrganizationAccessEnum;
    (function (DefaultOrganizationAccessEnum) {
        DefaultOrganizationAccessEnum[DefaultOrganizationAccessEnum["Private"] = 'private'] = "Private";
        DefaultOrganizationAccessEnum[DefaultOrganizationAccessEnum["View"] = 'view'] = "View";
        DefaultOrganizationAccessEnum[DefaultOrganizationAccessEnum["Comment"] = 'comment'] = "Comment";
        DefaultOrganizationAccessEnum[DefaultOrganizationAccessEnum["Edit"] = 'edit'] = "Edit";
    })(DefaultOrganizationAccessEnum = TeamSharingPolicySettingsChanges.DefaultOrganizationAccessEnum || (TeamSharingPolicySettingsChanges.DefaultOrganizationAccessEnum = {}));
    var DefaultProjectAccessEnum;
    (function (DefaultProjectAccessEnum) {
        DefaultProjectAccessEnum[DefaultProjectAccessEnum["Private"] = 'private'] = "Private";
        DefaultProjectAccessEnum[DefaultProjectAccessEnum["View"] = 'view'] = "View";
    })(DefaultProjectAccessEnum = TeamSharingPolicySettingsChanges.DefaultProjectAccessEnum || (TeamSharingPolicySettingsChanges.DefaultProjectAccessEnum = {}));
    var MoveBoardToAccountEnum;
    (function (MoveBoardToAccountEnum) {
        MoveBoardToAccountEnum[MoveBoardToAccountEnum["Allowed"] = 'allowed'] = "Allowed";
        MoveBoardToAccountEnum[MoveBoardToAccountEnum["NotAllowed"] = 'not_allowed'] = "NotAllowed";
    })(MoveBoardToAccountEnum = TeamSharingPolicySettingsChanges.MoveBoardToAccountEnum || (TeamSharingPolicySettingsChanges.MoveBoardToAccountEnum = {}));
    var SharingOnAccountEnum;
    (function (SharingOnAccountEnum) {
        SharingOnAccountEnum[SharingOnAccountEnum["Allowed"] = 'allowed'] = "Allowed";
        SharingOnAccountEnum[SharingOnAccountEnum["NotAllowed"] = 'not_allowed'] = "NotAllowed";
    })(SharingOnAccountEnum = TeamSharingPolicySettingsChanges.SharingOnAccountEnum || (TeamSharingPolicySettingsChanges.SharingOnAccountEnum = {}));
    var SharingOnOrganizationEnum;
    (function (SharingOnOrganizationEnum) {
        SharingOnOrganizationEnum[SharingOnOrganizationEnum["Allowed"] = 'allowed'] = "Allowed";
        SharingOnOrganizationEnum[SharingOnOrganizationEnum["AllowedWithEditing"] = 'allowed_with_editing'] = "AllowedWithEditing";
        SharingOnOrganizationEnum[SharingOnOrganizationEnum["NotAllowed"] = 'not_allowed'] = "NotAllowed";
    })(SharingOnOrganizationEnum = TeamSharingPolicySettingsChanges.SharingOnOrganizationEnum || (TeamSharingPolicySettingsChanges.SharingOnOrganizationEnum = {}));
    var SharingViaPublicLinkEnum;
    (function (SharingViaPublicLinkEnum) {
        SharingViaPublicLinkEnum[SharingViaPublicLinkEnum["Allowed"] = 'allowed'] = "Allowed";
        SharingViaPublicLinkEnum[SharingViaPublicLinkEnum["AllowedWithEditing"] = 'allowed_with_editing'] = "AllowedWithEditing";
        SharingViaPublicLinkEnum[SharingViaPublicLinkEnum["NotAllowed"] = 'not_allowed'] = "NotAllowed";
    })(SharingViaPublicLinkEnum = TeamSharingPolicySettingsChanges.SharingViaPublicLinkEnum || (TeamSharingPolicySettingsChanges.SharingViaPublicLinkEnum = {}));
    var SharingWithExternalUsersEnum;
    (function (SharingWithExternalUsersEnum) {
        SharingWithExternalUsersEnum[SharingWithExternalUsersEnum["Allowed"] = 'allowed'] = "Allowed";
        SharingWithExternalUsersEnum[SharingWithExternalUsersEnum["NotAllowed"] = 'not_allowed'] = "NotAllowed";
    })(SharingWithExternalUsersEnum = TeamSharingPolicySettingsChanges.SharingWithExternalUsersEnum || (TeamSharingPolicySettingsChanges.SharingWithExternalUsersEnum = {}));
})(TeamSharingPolicySettingsChanges = exports.TeamSharingPolicySettingsChanges || (exports.TeamSharingPolicySettingsChanges = {}));
exports.TeamSharingPolicySettingsChanges = TeamSharingPolicySettingsChanges;

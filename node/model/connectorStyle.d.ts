/**
 * Platform Tags
 * SCIM V1 API implemented by Miro
 *
 * The version of the OpenAPI document: v2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
* Contains information about the style of a connector, such as the color or caption font size
*/
export declare class ConnectorStyle {
    /**
    * Hex value representing the color for the captions on the connector. Default: `#1a1a1a`
    */
    'color'?: string;
    /**
    * The decoration cap of the connector end, like an arrow or circle. Default: stealth. Possible values: `none`, `stealth`, `diamond`, `diamond_filled`, `oval`, `oval_filled`, `arrow`, `triangle`, `triangle_filled`, `erd_one`, `erd_many`, `erd_only_one`, `erd_zero_or_one`, `erd_one_or_many`, `erd_zero_or_many`
    */
    'endStrokeCap'?: ConnectorStyle.EndStrokeCapEnum;
    /**
    * Defines the font size, in dp, for the captions on the connector. Default: 14
    */
    'fontSize'?: string;
    /**
    * The decoration cap of the connector end, like an arrow or circle. Default: none. Possible values: `none`, `stealth`, `diamond`, `diamond_filled`, `oval`, `oval_filled`, `arrow`, `triangle`, `triangle_filled`, `erd_one`, `erd_many`, `erd_only_one`, `erd_zero_or_one`, `erd_one_or_many`, `erd_zero_or_many`
    */
    'startStrokeCap'?: ConnectorStyle.StartStrokeCapEnum;
    /**
    * Hex value of the color of the connector line. Default: #000000.
    */
    'strokeColor'?: string;
    /**
    * The stroke pattern of the connector line. Default: normal. Possible values: `normal`, `dotted`, `dashed`
    */
    'strokeStyle'?: ConnectorStyle.StrokeStyleEnum;
    /**
    * The thickness of the connector line, in dp. Default: 1.0.
    */
    'strokeWidth'?: string;
    /**
    * The captions orientation relatively to the connector line curvature. Default: aligned. Possible values: `horizontal`, `aligned`
    */
    'textOrientation'?: ConnectorStyle.TextOrientationEnum;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace ConnectorStyle {
    enum EndStrokeCapEnum {
        None,
        Stealth,
        Diamond,
        DiamondFilled,
        Oval,
        OvalFilled,
        Arrow,
        Triangle,
        TriangleFilled,
        ErdOne,
        ErdMany,
        ErdOnlyOne,
        ErdZeroOrOne,
        ErdOneOrMany,
        ErdZeroOrMany
    }
    enum StartStrokeCapEnum {
        None,
        Stealth,
        Diamond,
        DiamondFilled,
        Oval,
        OvalFilled,
        Arrow,
        Triangle,
        TriangleFilled,
        ErdOne,
        ErdMany,
        ErdOnlyOne,
        ErdZeroOrOne,
        ErdOneOrMany,
        ErdZeroOrMany
    }
    enum StrokeStyleEnum {
        Normal,
        Dotted,
        Dashed
    }
    enum TextOrientationEnum {
        Horizontal,
        Aligned
    }
}

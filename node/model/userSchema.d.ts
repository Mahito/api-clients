/**
 * Platform Tags
 * SCIM V1 API implemented by Miro
 *
 * The version of the OpenAPI document: v2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { UserSchemaEmailsInner } from './userSchemaEmailsInner';
import { UserSchemaGroupsInner } from './userSchemaGroupsInner';
import { UserSchemaMeta } from './userSchemaMeta';
import { UserSchemaName } from './userSchemaName';
import { UserSchemaPhotosInner } from './userSchemaPhotosInner';
import { UserSchemaRolesInner } from './userSchemaRolesInner';
import { UserSchemaUrnIetfParamsScimSchemasExtensionEnterprise20User } from './userSchemaUrnIetfParamsScimSchemasExtensionEnterprise20User';
export declare class UserSchema {
    'active'?: boolean;
    /**
    * Read-only key. The only email present in this array is the username. The field is ignored on POST/PUT/PATCH operations.
    */
    'emails'?: Array<UserSchemaEmailsInner>;
    /**
    * Teams of a user
    */
    'groups'?: Array<UserSchemaGroupsInner>;
    'id': string;
    'meta'?: UserSchemaMeta;
    'name'?: UserSchemaName;
    'photos'?: Array<UserSchemaPhotosInner>;
    'roles'?: Array<UserSchemaRolesInner>;
    'schemas'?: Array<string>;
    'urnietfparamsscimschemasextensionenterprise20User'?: UserSchemaUrnIetfParamsScimSchemasExtensionEnterprise20User;
    'userName': string;
    /**
    * User license type
    */
    'userType'?: UserSchema.UserTypeEnum;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace UserSchema {
    enum UserTypeEnum {
        Full,
        Occasional,
        Free,
        FreeRestricted,
        FullTrial
    }
}

"use strict";
/**
 * Platform Tags
 * SCIM V1 API implemented by Miro
 *
 * The version of the OpenAPI document: v2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
exports.__esModule = true;
exports.EmbedUrlData = void 0;
/**
* For information about the JSON properties, see [Data](https://developers.miro.com/reference/data).
*/
var EmbedUrlData = /** @class */ (function () {
    function EmbedUrlData() {
        /**
        * A [valid URL](https://developers.miro.com/reference/data#embeddata) pointing to the content resource that you want to embed in the board. Possible transport protocols: HTTP, HTTPS.
        */
        this['url'] = 'https://www.youtube.com/watch?v=HlVSNEiFCBk';
    }
    EmbedUrlData.getAttributeTypeMap = function () {
        return EmbedUrlData.attributeTypeMap;
    };
    EmbedUrlData.discriminator = undefined;
    EmbedUrlData.attributeTypeMap = [
        {
            "name": "mode",
            "baseName": "mode",
            "type": "EmbedUrlData.ModeEnum"
        },
        {
            "name": "previewUrl",
            "baseName": "previewUrl",
            "type": "string"
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string"
        }
    ];
    return EmbedUrlData;
}());
exports.EmbedUrlData = EmbedUrlData;
(function (EmbedUrlData) {
    var ModeEnum;
    (function (ModeEnum) {
        ModeEnum[ModeEnum["Inline"] = 'inline'] = "Inline";
        ModeEnum[ModeEnum["Modal"] = 'modal'] = "Modal";
    })(ModeEnum = EmbedUrlData.ModeEnum || (EmbedUrlData.ModeEnum = {}));
})(EmbedUrlData = exports.EmbedUrlData || (exports.EmbedUrlData = {}));
exports.EmbedUrlData = EmbedUrlData;

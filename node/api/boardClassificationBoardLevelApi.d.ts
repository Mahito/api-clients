/**
 * Platform Tags
 * SCIM V1 API implemented by Miro
 *
 * The version of the OpenAPI document: v2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as http from 'http';
import { BoardDataClassificationLabel } from '../model/boardDataClassificationLabel';
import { DataClassificationLabelId } from '../model/dataClassificationLabelId';
export declare function BoardClassificationBoardLevelApi(accessToken: string): {
    /**
     * Retrieves board classification for a board.<br/><h3>Required scope</h3> <a target=\"blank\" href=\"/reference/scopes\">boards:read</a> <br/><h3>Rate limiting</h3> <a target=\"blank\" href=\"/reference/ratelimiting\">Level 2</a> <br/><h3>Enterprise only</h3> <p>This API is available only for <a target=\"blank\" href=\"/reference/api-reference#enterprise-plan\">Enterprise plan</a> users.</p>
     * @summary Get board classification
     * @param orgId id of the organization
     * @param teamId id of the team
     * @param boardId Unique identifier of the board that you want to retrieve.
     */
    enterpriseDataclassificationBoardGet: (orgId: string, teamId: string, boardId: string) => Promise<{
        response: http.IncomingMessage;
        body: BoardDataClassificationLabel;
    }>;
    /**
     * Updates board classification for an existing board.<br/><h3>Required scope</h3> <a target=\"blank\" href=\"/reference/scopes\">boards:write</a> <br/><h3>Rate limiting</h3> <a target=\"blank\" href=\"/reference/ratelimiting\">Level 2</a> <br/><h3>Enterprise only</h3> <p>This API is available only for <a target=\"blank\" href=\"/reference/api-reference#enterprise-plan\">Enterprise plan</a> users.</p>
     * @summary Update board classification
     * @param orgId id of the organization
     * @param teamId id of the team
     * @param boardId Unique identifier of the board that you want to update.
     * @param dataClassificationLabelId
     */
    enterpriseDataclassificationBoardSet: (orgId: string, teamId: string, boardId: string, dataClassificationLabelId: DataClassificationLabelId) => Promise<{
        response: http.IncomingMessage;
        body: BoardDataClassificationLabel;
    }>;
};

/**
 * Platform Tags
 * SCIM V1 API implemented by Miro
 *
 * The version of the OpenAPI document: v2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as http from 'http';
import { FrameCreateRequest } from '../model/frameCreateRequest';
import { FrameItem } from '../model/frameItem';
import { FrameUpdateRequest } from '../model/frameUpdateRequest';
export declare function FramesApi(accessToken: string): {
    /**
     * Adds a frame to a board.<br/><h3>Required scope</h3> <a target=\"blank\" href=\"/reference/scopes\">boards:write</a> <br/><h3>Rate limiting</h3> <a target=\"blank\" href=\"/reference/ratelimiting\">Level 2</a><br/>
     * @summary Create frame
     * @param boardId [Unique identifier (ID) of the board](https://developers.miro.com/reference/board-model) where you want to create a frame.
     * @param frameCreateRequest
     */
    createFrameItem: (boardId: string, frameCreateRequest: FrameCreateRequest) => Promise<{
        response: http.IncomingMessage;
        body: FrameItem;
    }>;
    /**
     * Deletes a frame from a board.<br/><h3>Required scope</h3> <a target=\"blank\" href=\"/reference/scopes\">boards:write</a> <br/><h3>Rate limiting</h3> <a target=\"blank\" href=\"/reference/ratelimiting\">Level 3</a><br/>
     * @summary Delete frame
     * @param boardId [Unique identifier (ID) of the board](https://developers.miro.com/reference/board-model) from which you want to delete the frame.
     * @param itemId [Unique identifier (ID) of the frame](https://developers.miro.com/reference/rest-api-item-model) that you want to delete.
     */
    deleteFrameItem: (boardId: string, itemId: string) => Promise<{
        response: http.IncomingMessage;
        body: object;
    }>;
    /**
     * Retrieves information for a specific frame on a board.<br/><h3>Required scope</h3> <a target=\"blank\" href=\"/reference/scopes\">boards:read</a> <br/><h3>Rate limiting</h3> <a target=\"blank\" href=\"/reference/ratelimiting\">Level 1</a><br/>
     * @summary Get frame
     * @param boardId [Unique identifier (ID) of the board](https://developers.miro.com/reference/board-model) that contains the frame that you want to retrieve
     * @param itemId [Unique identifier (ID) of the frame](https://developers.miro.com/reference/rest-api-item-model) that you want to retrieve.
     */
    getFrameItem: (boardId: string, itemId: string) => Promise<{
        response: http.IncomingMessage;
        body: FrameItem;
    }>;
    /**
     * Updates a frame on a board based on the data, style, or geometry properties provided in the request body.<br/><h3>Required scope</h3> <a target=\"blank\" href=\"/reference/scopes\">boards:write</a> <br/><h3>Rate limiting</h3> <a target=\"blank\" href=\"/reference/ratelimiting\">Level 2</a><br/>
     * @summary Update frame
     * @param boardId [Unique identifier (ID) of the board](https://developers.miro.com/reference/board-model) where you want to update the frame.
     * @param itemId [Unique identifier (ID) of the frame](https://developers.miro.com/reference/rest-api-item-model) that you want to update.
     * @param frameUpdateRequest
     */
    updateFrameItem: (boardId: string, itemId: string, frameUpdateRequest: FrameUpdateRequest) => Promise<{
        response: http.IncomingMessage;
        body: FrameItem;
    }>;
};

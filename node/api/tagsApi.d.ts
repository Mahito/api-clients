/**
 * Platform Tags
 * SCIM V1 API implemented by Miro
 *
 * The version of the OpenAPI document: v2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as http from 'http';
import { GetTagsResponse } from '../model/getTagsResponse';
import { ItemPagedResponse } from '../model/itemPagedResponse';
import { TagCreateRequest } from '../model/tagCreateRequest';
import { TagUpdateRequest } from '../model/tagUpdateRequest';
import { TagWithLinks } from '../model/tagWithLinks';
import { TagsPagedResponse } from '../model/tagsPagedResponse';
export declare function TagsApi(accessToken: string): {
    /**
     * Attach an existing tag to the specified item. Card and sticky note items can have up to 8 tags.<br/><h3>Required scope</h3> <a target=\"blank\" href=\"/reference/scopes\">boards:write</a> <br/><h3>Rate limiting</h3> <a target=\"blank\" href=\"/reference/ratelimiting\">Level 1</a><br/>
     * @summary Attach tag to item
     * @param boardId [Unique identifier (ID) of the board](https://developers.miro.com/reference/board-model) with the item that you want to add a tag to.
     * @param itemId [Unique identifier (ID) of the item](https://developers.miro.com/reference/rest-api-item-model) to which you want to add a tag.
     * @param tagId [Unique identifier (ID) of the tag](https://developers.miro.com/reference/rest-api-tag-data-model) you want to add to the item.
     */
    attachTagToItem: (boardId: string, itemId: string, tagId: string) => Promise<{
        response: http.IncomingMessage;
        body: object;
    }>;
    /**
     * Creates a tag on a board.<br/><h3>Required scope</h3> <a target=\"blank\" href=\"/reference/scopes\">boards:write</a> <br/><h3>Rate limiting</h3> <a target=\"blank\" href=\"/reference/ratelimiting\">Level 1</a><br/>
     * @summary Create tag
     * @param boardId [Unique identifier (ID) of the board](https://developers.miro.com/reference/board-model) where you want to create the tag.
     * @param tagCreateRequest
     */
    createTag: (boardId: string, tagCreateRequest: TagCreateRequest) => Promise<{
        response: http.IncomingMessage;
        body: TagWithLinks;
    }>;
    /**
     * Deletes the specified tag from the board. The tag is also removed from all cards and sticky notes on the board.<br/><h3>Required scope</h3> <a target=\"blank\" href=\"/reference/scopes\">boards:write</a> <br/><h3>Rate limiting</h3> <a target=\"blank\" href=\"/reference/ratelimiting\">Level 1</a><br/>
     * @summary Delete tag
     * @param boardId [Unique identifier (ID) of the board](https://developers.miro.com/reference/board-model) where you want to delete a specific tag.
     * @param tagId [Unique identifier (ID) of the tag](https://developers.miro.com/reference/rest-api-tag-data-model) that you want to delete.
     */
    deleteTag: (boardId: string, tagId: string) => Promise<{
        response: http.IncomingMessage;
        body: object;
    }>;
    /**
     * Retrieves all the items that have the specified tag.<br/><h3>Required scope</h3> <a target=\"blank\" href=\"/reference/scopes\">boards:read</a> <br/><h3>Rate limiting</h3> <a target=\"blank\" href=\"/reference/ratelimiting\">Level 1</a><br/>
     * @summary Get items by tag
     * @param boardId [Unique identifier (ID) of the board](https://developers.miro.com/reference/board-model) where you want to retrieve a specific tag.
     * @param tagId [Unique identifier (ID) of the tag](https://developers.miro.com/reference/rest-api-tag-data-model) that you want to retrieve.
     * @param limit
     * @param offset
     */
    getItemsByTag: (boardId: string, tagId: string, limit?: string, offset?: string) => Promise<{
        response: http.IncomingMessage;
        body: ItemPagedResponse;
    }>;
    /**
     * Retrieves information for a specific tag.<br/><h3>Required scope</h3> <a target=\"blank\" href=\"/reference/scopes\">boards:write</a> <br/><h3>Rate limiting</h3> <a target=\"blank\" href=\"/reference/ratelimiting\">Level 1</a><br/>
     * @summary Get tag
     * @param boardId [Unique identifier (ID) of the board](https://developers.miro.com/reference/board-model) where you want to retrieve a specific tag.
     * @param tagId [Unique identifier (ID) of the tag](https://developers.miro.com/reference/rest-api-tag-data-model) that you want to retrieve.
     */
    getTag: (boardId: string, tagId: string) => Promise<{
        response: http.IncomingMessage;
        body: TagWithLinks;
    }>;
    /**
     * Retrieves all the tags from the specified board.<br/><h3>Required scope</h3> <a target=\"blank\" href=\"/reference/scopes\">boards:read</a> <br/><h3>Rate limiting</h3> <a target=\"blank\" href=\"/reference/ratelimiting\">Level 1</a><br/>
     * @summary Get tags from board
     * @param boardId [Unique identifier (ID) of the board](https://developers.miro.com/reference/board-model) whose tags you want to retrieve.
     * @param limit
     * @param offset
     */
    getTagsFromBoard: (boardId: string, limit?: string, offset?: string) => Promise<{
        response: http.IncomingMessage;
        body: TagsPagedResponse;
    }>;
    /**
     * Retrieves all the tags from the specified item.<br/><h3>Required scope</h3> <a target=\"blank\" href=\"/reference/scopes\">boards:read</a> <br/><h3>Rate limiting</h3> <a target=\"blank\" href=\"/reference/ratelimiting\">Level 1</a><br/>
     * @summary Get tags from item
     * @param boardId [Unique identifier (ID) of the board](https://developers.miro.com/reference/board-model) with the item whose tags you want to retrieve.
     * @param itemId [Unique identifier (ID) of the item](https://developers.miro.com/reference/rest-api-item-model) whose tags you want to retrieve.
     */
    getTagsFromItem: (boardId: string, itemId: string) => Promise<{
        response: http.IncomingMessage;
        body: GetTagsResponse;
    }>;
    /**
     * Removes the specified tag from the specified item. The tag still exists on the board.<br/><h3>Required scope</h3> <a target=\"blank\" href=\"/reference/scopes\">boards:write</a> <br/><h3>Rate limiting</h3> <a target=\"blank\" href=\"/reference/ratelimiting\">Level 1</a><br/>
     * @summary Remove tag from item
     * @param boardId [Unique identifier (ID) of the board](https://developers.miro.com/reference/board-model) with the item that you want to remove a tag from.
     * @param itemId [Unique identifier (ID) of the item](https://developers.miro.com/reference/rest-api-item-model) that you want to remove the tag from.
     * @param tagId [Unique identifier (ID) of the tag](https://developers.miro.com/reference/rest-api-tag-data-model) that you want to remove from the item.
     */
    removeTagFromItem: (boardId: string, itemId: string, tagId: string) => Promise<{
        response: http.IncomingMessage;
        body: object;
    }>;
    /**
     * Updates a tag based on the data properties provided in the request body.<br/><h3>Required scope</h3> <a target=\"blank\" href=\"/reference/scopes\">boards:write</a> <br/><h3>Rate limiting</h3> <a target=\"blank\" href=\"/reference/ratelimiting\">Level 1</a><br/>
     * @summary Update tag
     * @param boardId [Unique identifier (ID) of the board](https://developers.miro.com/reference/board-model) where you want to update a specific tag.
     * @param tagId [Unique identifier (ID) of the tag](https://developers.miro.com/reference/rest-api-tag-data-model) that you want to update.
     * @param tagUpdateRequest
     */
    updateTag: (boardId: string, tagId: string, tagUpdateRequest: TagUpdateRequest) => Promise<{
        response: http.IncomingMessage;
        body: TagWithLinks;
    }>;
};

/**
 * Miro API
 * Miro API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
* Team sharing policy settings
*/
export class TeamSharingPolicySettings {
    /**
    * Set who can create assets in a team
    */
    'createAssetAccessLevel'?: TeamSharingPolicySettings.CreateAssetAccessLevelEnum;
    /**
    *  Default board access * \"private\": Only board owners can access * \"view\":    Anyone in the team can view * \"comment\": Anyone in the team can comment * \"edit\":    Anyone in the team can edit 
    */
    'defaultBoardAccess'?: TeamSharingPolicySettings.DefaultBoardAccessEnum;
    /**
    *  Default organization access * \"private\": Only board owners can access * \"view\":    Anyone in the team can view * \"comment\": Anyone in the team can comment * \"edit\":    Anyone in the team can edit 
    */
    'defaultOrganizationAccess'?: TeamSharingPolicySettings.DefaultOrganizationAccessEnum;
    /**
    *  Default project access * \"private\": Only board owners can access * \"view\":    Anyone in the team can view 
    */
    'defaultProjectAccess'?: TeamSharingPolicySettings.DefaultProjectAccessEnum;
    /**
    *  * \"allowed\": Allow move board to team * \"not_allowed\": Not allow move board to team 
    */
    'moveBoardToAccount'?: TeamSharingPolicySettings.MoveBoardToAccountEnum;
    /**
    *  * \"allowed\": Allow sharing on team * \"not_allowed\": Not allow sharing on team 
    */
    'sharingOnAccount'?: TeamSharingPolicySettings.SharingOnAccountEnum;
    /**
    *  * \"allowed\": Allow sharing on organization * \"allowed_with_editing\": Allow sharing with editing on organization * \"not_allowed\": Not allow sharing on organization 
    */
    'sharingOnOrganization'?: TeamSharingPolicySettings.SharingOnOrganizationEnum;
    /**
    *  * \"allowed\": Allow sharing via public link * \"allowed_with_editing\": Allow sharing with editing via public link * \"not_allowed\": Not allow sharing via public link 
    */
    'sharingViaPublicLink'?: TeamSharingPolicySettings.SharingViaPublicLinkEnum;
    /**
    *  * \"allowed\": Allow sharing with external users * \"not_allowed\": Not allow sharing with external users 
    */
    'sharingWithExternalUsers'?: TeamSharingPolicySettings.SharingWithExternalUsersEnum;
    /**
    * Enable whitelist domains
    */
    'whiteListDomainsEnabled'?: boolean;
    /**
    * Whitelisted domains
    */
    'whiteListedDomains'?: Array<string>;

    /** @ignore */
    static discriminator: string | undefined = undefined;

    /** @ignore */
    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "createAssetAccessLevel",
            "baseName": "createAssetAccessLevel",
            "type": "TeamSharingPolicySettings.CreateAssetAccessLevelEnum"
        },
        {
            "name": "defaultBoardAccess",
            "baseName": "defaultBoardAccess",
            "type": "TeamSharingPolicySettings.DefaultBoardAccessEnum"
        },
        {
            "name": "defaultOrganizationAccess",
            "baseName": "defaultOrganizationAccess",
            "type": "TeamSharingPolicySettings.DefaultOrganizationAccessEnum"
        },
        {
            "name": "defaultProjectAccess",
            "baseName": "defaultProjectAccess",
            "type": "TeamSharingPolicySettings.DefaultProjectAccessEnum"
        },
        {
            "name": "moveBoardToAccount",
            "baseName": "moveBoardToAccount",
            "type": "TeamSharingPolicySettings.MoveBoardToAccountEnum"
        },
        {
            "name": "sharingOnAccount",
            "baseName": "sharingOnAccount",
            "type": "TeamSharingPolicySettings.SharingOnAccountEnum"
        },
        {
            "name": "sharingOnOrganization",
            "baseName": "sharingOnOrganization",
            "type": "TeamSharingPolicySettings.SharingOnOrganizationEnum"
        },
        {
            "name": "sharingViaPublicLink",
            "baseName": "sharingViaPublicLink",
            "type": "TeamSharingPolicySettings.SharingViaPublicLinkEnum"
        },
        {
            "name": "sharingWithExternalUsers",
            "baseName": "sharingWithExternalUsers",
            "type": "TeamSharingPolicySettings.SharingWithExternalUsersEnum"
        },
        {
            "name": "whiteListDomainsEnabled",
            "baseName": "whiteListDomainsEnabled",
            "type": "boolean"
        },
        {
            "name": "whiteListedDomains",
            "baseName": "whiteListedDomains",
            "type": "Array<string>"
        }    ];

    /** @ignore */
    static getAttributeTypeMap() {
        return TeamSharingPolicySettings.attributeTypeMap;
    }
}

export namespace TeamSharingPolicySettings {
    export enum CreateAssetAccessLevelEnum {
        CompanyAdmins = <any> 'COMPANY_ADMINS',
        Admins = <any> 'ADMINS',
        AllMembers = <any> 'ALL_MEMBERS'
    }
    export enum DefaultBoardAccessEnum {
        Private = <any> 'private',
        View = <any> 'view',
        Comment = <any> 'comment',
        Edit = <any> 'edit'
    }
    export enum DefaultOrganizationAccessEnum {
        Private = <any> 'private',
        View = <any> 'view',
        Comment = <any> 'comment',
        Edit = <any> 'edit'
    }
    export enum DefaultProjectAccessEnum {
        Private = <any> 'private',
        View = <any> 'view'
    }
    export enum MoveBoardToAccountEnum {
        Allowed = <any> 'allowed',
        NotAllowed = <any> 'not_allowed'
    }
    export enum SharingOnAccountEnum {
        Allowed = <any> 'allowed',
        NotAllowed = <any> 'not_allowed'
    }
    export enum SharingOnOrganizationEnum {
        Allowed = <any> 'allowed',
        AllowedWithEditing = <any> 'allowed_with_editing',
        NotAllowed = <any> 'not_allowed'
    }
    export enum SharingViaPublicLinkEnum {
        Allowed = <any> 'allowed',
        AllowedWithEditing = <any> 'allowed_with_editing',
        NotAllowed = <any> 'not_allowed'
    }
    export enum SharingWithExternalUsersEnum {
        Allowed = <any> 'allowed',
        NotAllowed = <any> 'not_allowed'
    }
}

/**
 * Platform Tags
 * SCIM V1 API implemented by Miro
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
* Defines the permissions policies for the board. For more information, see [Permissions policy](https://developers.miro.com/reference/rest-api-policy-data-model#permissions-policy).
*/
export class BoardPermissionsPolicy {
    /**
    * Defines who can start or stop timer, voting, video chat, screen sharing, attention management. Others will only be able to join. To change the value for the `collaborationToolsStartAccess` parameter, contact Miro Customer Support. Possible values: `all_editors`, `board_owners_and_coowners`
    */
    'collaborationToolsStartAccess'?: BoardPermissionsPolicy.CollaborationToolsStartAccessEnum = BoardPermissionsPolicy.CollaborationToolsStartAccessEnum.AllEditors;
    /**
    * Defines who can copy the board, copy objects, download images, and save the board as a template or PDF. Possible values: `anyone`, `team_members`, `team_editors`, `board_owner`
    */
    'copyAccess'?: BoardPermissionsPolicy.CopyAccessEnum = BoardPermissionsPolicy.CopyAccessEnum.Anyone;
    /**
    * Defines who can change access and invite users to this board. To change the value for the `sharingAccess` parameter, contact Miro Customer Support. Possible values: `team_members_with_editing_rights`, `owner_and_coowners`
    */
    'sharingAccess'?: BoardPermissionsPolicy.SharingAccessEnum = BoardPermissionsPolicy.SharingAccessEnum.TeamMembersWithEditingRights;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "collaborationToolsStartAccess",
            "baseName": "collaborationToolsStartAccess",
            "type": "BoardPermissionsPolicy.CollaborationToolsStartAccessEnum"
        },
        {
            "name": "copyAccess",
            "baseName": "copyAccess",
            "type": "BoardPermissionsPolicy.CopyAccessEnum"
        },
        {
            "name": "sharingAccess",
            "baseName": "sharingAccess",
            "type": "BoardPermissionsPolicy.SharingAccessEnum"
        }    ];

    static getAttributeTypeMap() {
        return BoardPermissionsPolicy.attributeTypeMap;
    }
}

export namespace BoardPermissionsPolicy {
    export enum CollaborationToolsStartAccessEnum {
        AllEditors = <any> 'all_editors',
        BoardOwnersAndCoowners = <any> 'board_owners_and_coowners'
    }
    export enum CopyAccessEnum {
        Anyone = <any> 'anyone',
        TeamMembers = <any> 'team_members',
        TeamEditors = <any> 'team_editors',
        BoardOwner = <any> 'board_owner'
    }
    export enum SharingAccessEnum {
        TeamMembersWithEditingRights = <any> 'team_members_with_editing_rights',
        OwnerAndCoowners = <any> 'owner_and_coowners'
    }
}
